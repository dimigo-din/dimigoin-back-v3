name: Docker Build and Deploy
on: [push, pull_request]
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - 
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  
      -
        name: Extract branch name from git ref
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: extract_branch
      -
        name: Push to Docker Hub (in Pull Request)
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true 
          tags: dimigoin/dimigoin-server:${{ github.head_ref }}
      -
        name: Push to Docker Hub (in Master Push)
        if: ${{ github.event_name == 'push' &&
          steps.extract_branch.outputs.branch == 'master' }}
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true 
          tags: dimigoin/dimigoin-server:latest

  pull_from_registry:
    name: Pull Docker Image and Run
    runs-on: ubuntu-latest
    needs: [push_to_registry]
    if: github.ref == 'refs/heads/master'
    steps:
    -
      name: Pull from Docker Hub and Run image
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOSTNAME }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          docker pull dimigoin/dimigoin-server:latest
          docker rm -f dimigoin-server-prod
          docker run --name dimigoin-server-prod --env-file /etc/dimigoin-server.env -v /dimigoin-files:/usr/src/app/exported-files -p 5000:5000 -d dimigoin/dimigoin-server
